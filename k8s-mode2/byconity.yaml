# Default values for byconity.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# please replace  storageClassName
nameOverride: ""
fullnameOverride: ""

image:
  repository: byconity/byconity
  tag: stable
  imagePullPolicy: IfNotPresent

byconity:
  hdfs_address: hdfs
  use_existing_fdb: true
  fdb_cluster_file: 
  hdfs3Config:
    dfs.client.metrics.enable: true
    dfs.client.metrics.use_domain_socket: true
    dfs.default.blocksize: "268435456"
    dfs.read.hedge_read.interval_ms: 120
    input.connect.timeout: 10000
    input.read.max.retry: 3
    input.read.timeout: 6000
    input.write.timeout: 10000
    output.close.timeout: 256000
    output.connect.timeout: 10000
    output.default.write.retry: 3
    output.read.timeout: 120000
    output.write.timeout: 256000
    rpc.client.connect.retry: 3
    rpc.client.connect.timeout: 10000
    rpc.client.read.timeout: 20000
    rpc.client.timeout: 20000
    rpc.client.write.timeout: 20000

    dfs.nameservices: nameservices 
    dfs.ha.automatic-failover.enabled: true
    dfs.ha.fencing.methods: shell(/bin/true)
    dfs.replication: 3
    dfs.datanode.du.reserved: 859755813888
    dfs.webhdfs.enabled: false
    dfs.namenode.datanode.registration.ip-hostname-check: false
    dfs.namenode.avoid.read.stale.datanode: true
    dfs.namenode.avoid.write.stale.datanode: true
    dfs.datanode.max.transfer.threads: 32768
    dfs.namenode.handler.count: 512
    dfs.namenode.service.handler.count: 512
    dfs.namenode.support.allow.format: false
    dfs.namenode.stale.datanode.interval: 60000
    dfs.client.read.shortcircuit: true
    dfs.datanode.fsdataset.volume.choosing.policy: org.apache.hadoop.hdfs.server.datanode.fsdataset.AvailableSpaceVolumeChoosingPolicy
    dfs.qjournal.write-txns.timeout.ms: 90000
    dfs.client.datanode-restart.timeout: 30
    dfs.block.access.token.enable: true
    dfs.datanode.data.dir.perm: 700
    dfs.permissions.supergroup: supergroup
    dfs.https.enable: false
    dfs.namenode.acls.enabled: false
    ignore.secure.ports.for.testing: true
    dfs.namenode.audit.log.async: true
    ipc.9000.backoff.enable: true
    ipc.9000.callqueue.impl: org.apache.hadoop.ipc.FairCallQueue
    dfs.permissions.enabled: true
    dfs.permissions: true
    dfs.over.size: 98
    dfs.namenode.balancer.request.standby: true
    dfs.client.failover.random.order: true
    dfs.federation.router.heartbeat.enable: true
    dfs.federation.router.monitor.localnamenode.enable: false
    dfs.federation.router.mount-table.cache.update: true
    dfs.cross.dc.read.monitor.enable: false
    dfs.cross.dc.write.monitor.enable: false
    hadoop.security.authentication: KERBEROS
    dfs.use.internal.credential.format: false
    dfs.data.transfer.protection: authentication
    dfs.block.access.token.enable: true

  configOverwrite:
    storage_configuration:
      cnch_default_policy: cnch_default_hdfs
      disks:
        server_hdfs_prod:
          path: /olap_byconity_cluster1/
          type: hdfs
          hdfs_params:
            hdfs_user: hdfs_user
            hdfs_ha_nameservice: hdfs_ha_nameservice
            hadoop_kerberos_keytab: hadoop_kerberos_keytab
            hadoop_kerberos_principal: hadoop_kerberos_principal
            hadoop_security_authentication: KERBEROS
            hdfs3_config: /etc/byconity/hdfs-site.xml
        server_hdfs_disk:
          path: /var/byconity/data
          type: hdfs
          hdfs_params:
            hdfs_user: root
            hdfs_addr: hdfs_addr
            hdfs3_config: /etc/byconity/hdfs-site.xml
        server_local_0:
          path: /var/byconity/data
          type: local

      policies:
        cnch_hdfs_prod:
          volumes:
            hdfs:
              default: server_hdfs_prod
              disk: server_hdfs_prod
        cnch_default_hdfs:
          volumes:
            hdfs:
              default: server_hdfs_disk
              disk: server_hdfs_disk
        default:
          volumes:
            local:
              default: server_local_0
              disk: server_local_0

  ports:
    tcp: 9000
    http: 8123
    rpc: 8124
    tcpSecure: 9100
    https: 9123
    exchange: 9410
    exchangeStatus: 9510

  usersOverwrite:
    users:
      default:
        password: ""
      probe:
        password: probe

  server:
    replicas: 1
    image: ""
    podAnnotations: { }
    resources: { }
    hostNetwork: true
    nodeSelector: { }
    tolerations: [ ]
    affinity: { }
    imagePullSecrets: [ ]
    securityContext:
      #runAsUser: "${UID_BIGDATA}"
      #runAsGroup: "${GID_BIGDATA}"
      #runAsUser: 1003
      #runAsGroup: 1003
      #runAsNonRoot: true
    storage:
      localDisk:
        pvcSpec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 30Gi
      log:
        pvcSpec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 20Gi
          #storageClassName: local-path #replace to your storageClassName
    configOverwrite:
      logger:
        level: trace
      disk_cache_strategies:
        simple:
          lru_max_size: 429496729600 # 400Gi
      timezone: "Asia/Shanghai"

  tso:
    replicas: 1
    image: ""
    podAnnotations: { }
    resources:
      limits:
        cpu: "10"  # >=3
        memory: 20Gi
      requests:
        cpu: "10"  # >=3
        memory: 20Gi
    hostNetwork: false
    nodeSelector: { }
    tolerations: [ ]
    affinity: { }
    imagePullSecrets: [ ]
    securityContext: { }
    additionalVolumeClaimTemplates:   #add new pvc for coordination
      - metadata:
          name: coordination
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 50Gi
          #storageClassName: local-path #replace to your storageClassName

    storage:
      localDisk:
        pvcSpec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 30Gi
          #storageClassName: local-path #replace to your storageClassName
      log:
        pvcSpec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 20Gi
          #storageClassName: local-path #replace to your storageClassName
    additionalVolumes:    #add new volume for coordination
      volumes:
      volumeMounts:
        - name: coordination
          mountPath: /var/byconity/tso/coordination
    configOverwrite: { }


  daemonManager:
    replicas: 1 # Please keep single instance now, daemon manager HA is WIP
    image: ""
    podAnnotations: { }
    resources: { }
    hostNetwork: false
    nodeSelector: { }
    tolerations: [ ]
    affinity: { }
    imagePullSecrets: [ ]
    securityContext: { }
    configOverwrite: { }

  resourceManager:
    replicas: 1
    image: ""
    podAnnotations: { }
    resources: { }
    hostNetwork: false
    nodeSelector: { }
    tolerations: [ ]
    affinity: { }
    imagePullSecrets: [ ]
    securityContext: { }
    configOverwrite: { }

  defaultWorker: &defaultWorker
    replicas: 10
    image: ""
    podAnnotations: { }
    resources: { }
    hostNetwork: false
    nodeSelector: { }
    tolerations: [ ]
    affinity: { }
    imagePullSecrets: [ ]
    securityContext: { }
    storage:
      localDisk:
        pvcSpec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 500Gi
          #storageClassName: local-path #replace to your storageClassName
      log:
        pvcSpec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
          #storageClassName: local-path #replace to your storageClassName
    configOverwrite:
      logger:
        level: trace
      disk_cache_strategies:
        simple:
          lru_max_size: 429496729600 # 400Gi
      timezone: "Asia/Shanghai"

  virtualWarehouses:
    - <<: *defaultWorker
      name: vw_default
      replicas: 2
    - <<: *defaultWorker
      name: vw_write
      replicas: 2

  commonEnvs:
    - name: MY_POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: "metadata.namespace"
    - name: MY_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: "metadata.name"
    - name: MY_UID
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: "metadata.uid"
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: "status.podIP"
    - name: MY_HOST_IP
      valueFrom:
        fieldRef:
          # fieldPath: "status.hostIP"
          fieldPath: "status.podIP"
    - name: CONSUL_HTTP_HOST
      valueFrom:
        fieldRef:
          fieldPath: "status.hostIP"

  additionalEnvs: [ ]

  additionalVolumes:
    volumes: [ ]
    volumeMounts: [ ]

  postStart: ""
  preStop: ""
  readiness: ""
  liveness: ""

  ingress:
    enabled: false
    className: ""
    annotations: { }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    hosts:
      - host: byconity-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: [ ]


